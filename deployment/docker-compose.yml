version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
    volumes: 
      - /home/ubuntu/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: 18.219.140.116
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://18.219.140.116:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock 
      - /home/ubuntu/kafka:/kafka/kafka-logs
    depends_on: 
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    image: receiver:latest
    ports:
      - "8080:8080"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/receiver:/config
      - /home/ubuntu/logs:/logs
    depends_on:
      - kafka

  storage:
    image: storage:latest
    ports:
      - "8090:8090"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/storage:/config
      - /home/ubuntu/logs:/logs      
    depends_on:
      - kafka
      - db

  processing: 
    image: processing:latest
    network_mode: "host"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/processing:/config
      - /home/ubuntu/logs:/logs
      - processing-db:/data
    depends_on:
      - storage

  audit_log:
    image: audit_log:latest
    ports:
      - "8070:8070"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/ubuntu/config/audit_log:/config
      - /home/ubuntu/logs:/logs
    depends_on:
      - kafka

  # dashboard:
  #   image: dashboard:latest
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - "processing"
  #     - "audit_log"

  health:
    image: health:latest
    ports:
      - "8120:8120"
    depends_on:
      - "storage"
      - "receiver"
      - "audit_log"
      - "processing"

volumes:
  my-db:
  processing-db:



